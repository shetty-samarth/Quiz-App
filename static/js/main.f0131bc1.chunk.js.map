{"version":3,"sources":["API.ts","App.tsx","index.tsx"],"names":["Difficulty","fetchQuizQuestions","amount","difficulty","a","endpoint","fetch","json","data","console","log","App","useState","EASY","startQuiz","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHAAYA,E,wEAAAA,K,YAAAA,E,gBAAAA,E,aAAAA,M,KAML,IAAMC,EAAkB,uCAAG,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,6DACxBC,EADwB,6CACyBH,EADzB,uBAC8CC,EAD9C,2BAEJG,MAAMD,GAFF,8BAEaE,OAFb,OAExBC,EAFwB,OAG9BC,QAAQC,IAAIF,GAHkB,2CAAH,wD,OC2ChBG,EA1CH,WACV,MAA8BC,oBAAS,GAAvC,mBACA,GADA,UACiCA,mBAAS,KAA1C,mBACA,GADA,UAC4BA,mBAAS,IAArC,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBACA,GADA,UAC0BA,mBAAS,IAAnC,mBACA,GADA,UACgCA,oBAAS,IAAzC,6BAEAH,QAAQC,IAAI,OAAOT,EAVP,GAUgCD,EAAWa,OAGvD,IAAMC,EAAS,uCAAG,sBAAAV,EAAA,0FAAH,qDAWf,OACE,sBAAKW,UAAU,MAAf,UACE,4CACA,wBAAQA,UAAU,QAAQC,QAASF,EAAnC,mBACA,mBAAGC,UAAU,QAAb,qBACA,wDAUA,wBAAQA,UAAU,OAAOC,QAlBR,aAkBjB,+BCxCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f0131bc1.chunk.js","sourcesContent":["export enum Difficulty{\r\n    EASY = \"easy\",\r\n    MEDIUM = \"medium\",\r\n    HARD=\"HARD\"\r\n}\r\n\r\nexport const fetchQuizQuestions = async (amount: number, difficulty:Difficulty) =>{\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`\r\n    const data = await (await fetch(endpoint)).json();\r\n    console.log(data);\r\n};","import React, { useState } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport {fetchQuizQuestions} from './API'\nimport {Difficulty} from './API'\n\nconst TOTAL = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions,setQuestions] = useState([]);\n  const [number, setNumber] = useState(1);\n  const [answer, setAnswer] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log('data',fetchQuizQuestions(TOTAL,Difficulty.EASY));\n\n\n  const startQuiz = async() => {\n    \n  }\n\n  const checkAns = (e: React.MouseEvent<HTMLButtonElement>) =>{\n\n  }\n\n  const nextQuestion = () =>{\n\n  }\n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className=\"start\" onClick={startQuiz}>START</button>\n      <p className=\"score\">Score: </p>\n      <p>Loading Question ......</p>\n      {/* <QuestionCard \n      questionNr = {number}\n      totalQuestions={TOTAL}\n      question = {questions[number].question}\n      answer = {questions[number].answers}\n      userAnswer = {answer? answer[number] : undefined} \n      callback = {checkAns}/> */}\n      \n\n      <button className=\"next\" onClick={nextQuestion}>Next Question</button>\n    </div>\n  );\n}\n\nexport default App;\nfunction async() {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}